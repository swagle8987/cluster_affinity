import argparse
from .cluster_computation import rooted_cluster_affinity
import dendropy


def cluster_affinity_script():
    parser = argparse.ArgumentParser(
            prog='Cluster Affinity',
            description='Calculates the Asymmetric Cluster Affinity cost from t1 to t2',
    )
    parser.add_argument('t1', help='The source tree from which the cost is to be calculated')
    parser.add_argument('t2', help='The target tree to which is to be calculated')
    args = parser.parse_args()
    tns = dendropy.TaxonNamespace(label="taxa")
    t1 = dendropy.Tree.get(path=args.t1,taxon_namespace=tns,schema="newick",rooting="default-rooted")
    t2 = dendropy.Tree.get(path=args.t2,taxon_namespace=tns,schema="newick",rooting="default-rooted")

    if len(tns)>len(t1.poll_taxa()) or len(tns)>len(t2.poll_taxa()):
        raise RuntimeWarning("The trees do not have the same taxon set")

    print(rooted_cluster_affinity(t1,t2))

